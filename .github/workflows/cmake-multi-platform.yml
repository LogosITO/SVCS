name: CMake Multi-Platform CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        build_type: [Debug, Release]
        
    runs-on: ${{ matrix.os }}
    
    steps:
    
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Install System Prerequisites
      if: runner.os != 'Windows'
      run: |
        if [ "${{ runner.os }}" == "Linux" ]; then
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ninja-build
        elif [ "${{ runner.os }}" == "macOS" ]; then
          brew install cmake ninja
        fi

    - name: Cache Vcpkg
      uses: actions/cache@v4
      with:
        path: ${{ github.workspace }}/vcpkg
        key: ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json') }}
        restore-keys: |
          ${{ runner.os }}-vcpkg-

    - name: Setup Vcpkg
      shell: bash
      run: |
        if [ ! -d "vcpkg" ]; then
          git clone https://github.com/microsoft/vcpkg.git
          if [ "${{ runner.os }}" == "Windows" ]; then
            ./vcpkg/bootstrap-vcpkg.bat -disableMetrics
          else
            ./vcpkg/bootstrap-vcpkg.sh -disableMetrics
          fi
        fi

    - name: Install Dependencies
      shell: bash
      run: |
        # Устанавливаем только boost и openssl, игнорируем опциональные зависимости
        ./vcpkg/vcpkg install boost openssl --clean-after-build --x-no-default-features

    - name: Configure CMake
      run: |
        cmake -S ${{ github.workspace }} -B ${{ github.workspace }}/build \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake

    - name: Build Project
      run: cmake --build ${{ github.workspace }}/build --config ${{ matrix.build_type }} --parallel
      
    - name: Run Tests
      run: ctest --test-dir ${{ github.workspace }}/build -C ${{ matrix.build_type }} --output-on-failure
      
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-${{ matrix.build_type }}-binaries
        path: ${{ github.workspace }}/build/bin/*